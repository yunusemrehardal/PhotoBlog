{
  "version": 3,
  "sources": ["tags.js"],
  "sourcesContent": ["/**\r\n * Bootstrap 5 (and 4!) tags\r\n *\r\n * Turns your select[multiple] into nice tags lists\r\n *\r\n * Required Bootstrap 5 styles:\r\n * - badge\r\n * - background-color utility\r\n * - margin-end utility\r\n * - float-start utility\r\n * - forms\r\n * - dropdown\r\n */\r\n\r\n// #region config\r\n\r\n/**\r\n * @typedef Config\r\n * @property {Boolean} allowNew Allows creation of new tags\r\n * @property {Boolean} showAllSuggestions Show all suggestions even if they don't match. Disables validation.\r\n * @property {String} badgeStyle Color of the badge (color can be configured per option as well)\r\n * @property {Boolean} allowClear Show a clear icon\r\n * @property {Boolean} clearEnd Place clear icon at the end\r\n * @property {Array|String} selected A comma separated list of selected values\r\n * @property {String} regex Regex for new tags\r\n * @property {Array|String} separator A list (pipe separated) of characters that should act as separator (default is using enter key)\r\n * @property {Number} max Limit to a maximum of tags (0 = no limit)\r\n * @property {String} placeholder Provides a placeholder if none are provided as the first empty option\r\n * @property {String} clearLabel Text as clear tooltip\r\n * @property {String} searchLabel Default placeholder\r\n * @property {Boolean} keepOpen Keep suggestions open after selection, clear on focus out\r\n * @property {String} baseClass Customize the class applied to badges\r\n * @property {Boolean} addOnBlur Add new tags on blur (only if allowNew is enabled)\r\n * @property {Number} suggestionsThreshold Number of chars required to show suggestions\r\n * @property {Number} maximumItems Maximum number of items to display\r\n * @property {Boolean} autoselectFirst Always select the first item\r\n * @property {Boolean} updateOnSelect Update input value on selection (doesn't play nice with autoselectFirst)\r\n * @property {Boolean} fullWidth Match the width on the input field\r\n * @property {String} labelField Key for the label\r\n * @property {String} valueField Key for the value\r\n * @property {String} queryParam Name of the param passed to endpoint (query by default)\r\n * @property {String} server Endpoint for data provider\r\n * @property {String|Object} serverParams Parameters to pass along to the server\r\n * @property {Boolean} liveServer Should the endpoint be called each time on input\r\n * @property {Boolean} noCache Prevent caching by appending a timestamp\r\n * @property {Number} debounceTime Debounce time for live server\r\n * @property {String} notFoundMessage Display a no suggestions found message. Leave empty to disable\r\n * @property {Function} onRenderItem Callback function that returns the label\r\n * @property {Function} onSelectItem Callback function to call on selection\r\n * @property {Function} onServerResponse Callback function to process server response. Must return a Promise\r\n */\r\n\r\n/**\r\n * @type {Config}\r\n */\r\nconst DEFAULTS = {\r\n  allowNew: false,\r\n  showAllSuggestions: false,\r\n  badgeStyle: \"primary\",\r\n  allowClear: false,\r\n  clearEnd: false,\r\n  selected: [],\r\n  regex: \"\",\r\n  separator: [],\r\n  max: 0,\r\n  clearLabel: \"Clear\",\r\n  searchLabel: \"Type a value\",\r\n  keepOpen: false,\r\n  baseClass: \"\",\r\n  placeholder: \"\",\r\n  addOnBlur: false,\r\n  suggestionsThreshold: 1,\r\n  maximumItems: 0,\r\n  autoselectFirst: true,\r\n  updateOnSelect: false,\r\n  fullWidth: false,\r\n  labelField: \"label\",\r\n  valueField: \"value\",\r\n  queryParam: \"query\",\r\n  server: \"\",\r\n  serverParams: {},\r\n  liveServer: false,\r\n  noCache: true,\r\n  debounceTime: 300,\r\n  notFoundMessage: \"\",\r\n  onRenderItem: (item, label) => {\r\n    return label;\r\n  },\r\n  onSelectItem: (item) => {},\r\n  onServerResponse: (response) => {\r\n    return response.json();\r\n  },\r\n};\r\n\r\n// #endregion\r\n\r\n// #region constants\r\n\r\nconst CLASS_PREFIX = \"tags-\";\r\nconst LOADING_CLASS = \"is-loading\";\r\nconst ACTIVE_CLASS = \"is-active\";\r\nconst ACTIVE_CLASSES = [\"is-active\", \"bg-primary\", \"text-white\"];\r\nconst VALUE_ATTRIBUTE = \"data-value\";\r\nconst NEXT = \"next\";\r\nconst PREV = \"prev\";\r\nconst FOCUS_CLASS = \"form-control-focus\"; // should match form-control:focus\r\n\r\nconst INSTANCE_MAP = new WeakMap();\r\nlet counter = 0;\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n/**\r\n * @param {Function} func\r\n * @param {number} timeout\r\n * @returns {Function}\r\n */\r\nfunction debounce(func, timeout = 300) {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      //@ts-ignore\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {string} size\r\n * @returns {Number}\r\n */\r\nfunction calcTextWidth(text, size = null) {\r\n  const span = document.createElement(\"span\");\r\n  document.body.appendChild(span);\r\n  span.style.fontSize = size || \"inherit\";\r\n  span.style.height = \"auto\";\r\n  span.style.width = \"auto\";\r\n  span.style.position = \"absolute\";\r\n  span.style.whiteSpace = \"no-wrap\";\r\n  span.innerHTML = text;\r\n  const width = Math.ceil(span.clientWidth) + 8;\r\n  document.body.removeChild(span);\r\n  return width;\r\n}\r\n\r\n/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nfunction removeDiacritics(str) {\r\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {HTMLElement} newEl\r\n * @returns {HTMLElement}\r\n */\r\nfunction insertAfter(el, newEl) {\r\n  return el.parentNode.insertBefore(newEl, el.nextSibling);\r\n}\r\n\r\n// #endregion\r\n\r\nclass Tags {\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   * @param {Object|Config} config\r\n   */\r\n  constructor(el, config = {}) {\r\n    INSTANCE_MAP.set(el, this);\r\n    counter++;\r\n    this._selectElement = el;\r\n\r\n    this._configure(config);\r\n\r\n    // private vars\r\n    this._keyboardNavigation = false;\r\n    this._searchFunc = debounce(() => {\r\n      this._loadFromServer(true);\r\n    }, this._config.debounceTime);\r\n    this._fireEvents = true;\r\n    this._initialValues = [];\r\n\r\n    this._configureParent();\r\n\r\n    // Create elements\r\n    this._holderElement = document.createElement(\"div\"); // this is the one holding the fake input and the dropmenu\r\n    this._containerElement = document.createElement(\"div\"); // this is the one for the fake input (labels + input)\r\n    this._holderElement.appendChild(this._containerElement);\r\n\r\n    // insert after select\r\n    insertAfter(this._selectElement, this._holderElement);\r\n\r\n    // Configure them\r\n    this._configureSelectElement();\r\n    this._configureHolderElement();\r\n    this._configureContainerElement();\r\n    this._configureSearchInput();\r\n    this._configureDropElement();\r\n    this.resetState();\r\n\r\n    // Add listeners (remove then on dispose()). See handleEvent.\r\n    this._searchInput.addEventListener(\"focus\", this); // focusin bubbles, focus does not.\r\n    this._searchInput.addEventListener(\"blur\", this); // focusout bubbles, blur does not.\r\n    this._searchInput.addEventListener(\"input\", this);\r\n    this._searchInput.addEventListener(\"keydown\", this);\r\n    this._dropElement.addEventListener(\"mousemove\", this);\r\n\r\n    this._fetchData();\r\n  }\r\n\r\n  // #region Core\r\n\r\n  /**\r\n   * Attach to all elements matched by the selector\r\n   * @param {string} selector\r\n   * @param {Object} opts\r\n   */\r\n  static init(selector = \"select[multiple]\", opts = {}) {\r\n    /**\r\n     * @type {NodeListOf<HTMLSelectElement>}\r\n     */\r\n    let list = document.querySelectorAll(selector);\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (Tags.getInstance(list[i])) {\r\n        continue;\r\n      }\r\n      new Tags(list[i], opts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   */\r\n  static getInstance(el) {\r\n    if (INSTANCE_MAP.has(el)) {\r\n      return INSTANCE_MAP.get(el);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this._searchInput.removeEventListener(\"focus\", this);\r\n    this._searchInput.removeEventListener(\"blur\", this);\r\n    this._searchInput.removeEventListener(\"input\", this);\r\n    this._searchInput.removeEventListener(\"keydown\", this);\r\n    this._dropElement.removeEventListener(\"mousemove\", this);\r\n\r\n    // restore select, remove our custom stuff and unbind parent\r\n    this._selectElement.style.display = \"block\";\r\n    this._holderElement.parentElement.removeChild(this._holderElement);\r\n    if (this.parentForm) {\r\n      this.parentForm.removeEventListener(\"reset\", this.reset);\r\n    }\r\n\r\n    INSTANCE_MAP.delete(this._selectElement);\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    this[`on${event.type}`](event);\r\n  }\r\n\r\n  /**\r\n   * @param {Config|Object} config\r\n   */\r\n  _configure(config = {}) {\r\n    this._config = Object.assign({}, DEFAULTS);\r\n\r\n    // Handle options, using arguments first and data attr as override\r\n    const o = { ...config, ...this._selectElement.dataset };\r\n\r\n    // Allow 1/0, true/false as strings\r\n    const parseBool = (value) => [\"true\", \"false\", \"1\", \"0\", true, false].includes(value) && !!JSON.parse(value);\r\n\r\n    // Typecast provided options based on defaults types\r\n    for (const [key, defaultValue] of Object.entries(DEFAULTS)) {\r\n      // Check for undefined keys\r\n      if (o[key] === void 0) {\r\n        continue;\r\n      }\r\n      const value = o[key];\r\n      switch (typeof defaultValue) {\r\n        case \"number\":\r\n          this._config[key] = parseInt(value);\r\n          break;\r\n        case \"boolean\":\r\n          this._config[key] = parseBool(value);\r\n          break;\r\n        case \"string\":\r\n          this._config[key] = value.toString();\r\n          break;\r\n        case \"object\":\r\n          // Arrays have a type object in js\r\n          if (Array.isArray(defaultValue)) {\r\n            // string separator can be | or ,\r\n            const separator = value.includes(\"|\") ? \"|\" : \",\";\r\n            this._config[key] = typeof value === \"string\" ? value.split(separator) : value;\r\n          } else {\r\n            this._config[key] = typeof value === \"string\" ? JSON.parse(value) : value;\r\n          }\r\n          break;\r\n        case \"function\":\r\n          this._config[key] = typeof value === \"string\" ? window[value] : value;\r\n          break;\r\n        default:\r\n          this._config[key] = value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Dynamic default values\r\n    if (!this._config.placeholder) {\r\n      this._config.placeholder = this._getPlaceholder();\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Html\r\n\r\n  /**\r\n   * Find overflow parent for positioning\r\n   * and bind reset event of the parent form\r\n   */\r\n  _configureParent() {\r\n    this.overflowParent = null;\r\n    this.parentForm = this._selectElement.parentElement;\r\n    while (this.parentForm) {\r\n      if (this.parentForm.style.overflow === \"hidden\") {\r\n        this.overflowParent = this.parentForm;\r\n      }\r\n      this.parentForm = this.parentForm.parentElement;\r\n      if (this.parentForm && this.parentForm.nodeName == \"FORM\") {\r\n        break;\r\n      }\r\n    }\r\n    this.reset = this.reset.bind(this);\r\n    if (this.parentForm) {\r\n      this.parentForm.addEventListener(\"reset\", this.reset);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  _getPlaceholder() {\r\n    // Use placeholder and data-placeholder in priority\r\n    if (this._selectElement.hasAttribute(\"placeholder\")) {\r\n      return this._selectElement.getAttribute(\"placeholder\");\r\n    }\r\n    if (this._selectElement.dataset.placeholder) {\r\n      return this._selectElement.dataset.placeholder;\r\n    }\r\n    // Fallback to first option if no value\r\n    let firstOption = this._selectElement.querySelector(\"option\");\r\n    if (!firstOption) {\r\n      return \"\";\r\n    }\r\n    if (firstOption.hasAttribute(\"selected\")) {\r\n      firstOption.removeAttribute(\"selected\");\r\n    }\r\n    return !firstOption.value ? firstOption.textContent : \"\";\r\n  }\r\n\r\n  _configureSelectElement() {\r\n    // If we use display none, we don't get the focus event\r\n    // this._selectElement.style.display = \"none\";\r\n    this._selectElement.style.position = \"absolute\";\r\n    this._selectElement.style.left = \"-9999px\";\r\n    this._selectElement.addEventListener(\"focus\", (event) => {\r\n      // Forward event\r\n      this._searchInput.focus();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Configure drop element\r\n   * Needs to be called after searchInput is created\r\n   */\r\n  _configureDropElement() {\r\n    this._dropElement = document.createElement(\"ul\");\r\n    this._dropElement.classList.add(...[\"dropdown-menu\", CLASS_PREFIX + \"menu\", \"p-0\"]);\r\n    this._dropElement.setAttribute(\"id\", CLASS_PREFIX + \"menu-\" + counter);\r\n    this._dropElement.setAttribute(\"role\", \"menu\");\r\n    this._dropElement.style.maxHeight = \"280px\";\r\n    if (!this._config.fullWidth) {\r\n      this._dropElement.style.maxWidth = \"360px\";\r\n    }\r\n    this._dropElement.style.overflowY = \"auto\";\r\n\r\n    // If the mouse was outside, entering remove keyboard nav mode\r\n    this._dropElement.addEventListener(\"mouseenter\", (event) => {\r\n      this._keyboardNavigation = false;\r\n    });\r\n    this._holderElement.appendChild(this._dropElement);\r\n\r\n    // include aria-controls with the value of the id of the suggested list of values.\r\n    this._searchInput.setAttribute(\"aria-controls\", this._dropElement.getAttribute(\"id\"));\r\n  }\r\n\r\n  _configureHolderElement() {\r\n    this._holderElement.classList.add(...[\"form-control\", \"dropdown\"]);\r\n    // Reflect size\r\n    if (this._selectElement.classList.contains(\"form-select-lg\")) {\r\n      this._holderElement.classList.add(\"form-control-lg\");\r\n    }\r\n    if (this._selectElement.classList.contains(\"form-select-sm\")) {\r\n      this._holderElement.classList.add(\"form-control-sm\");\r\n    }\r\n    // If we don't have an overflow parent, we can simply inherit styles\r\n    // If we have an overflow parent, it needs a relatively positioned element\r\n    if (this.overflowParent) {\r\n      this._holderElement.style.position = \"inherit\";\r\n    }\r\n    if (this._getBootstrapVersion() === 4) {\r\n      // Prevent fixed height due to form-control\r\n      this._holderElement.style.height = \"auto\";\r\n    }\r\n  }\r\n\r\n  _configureContainerElement() {\r\n    this._containerElement.addEventListener(\"click\", (event) => {\r\n      if (this.isDisabled()) {\r\n        return;\r\n      }\r\n      if (this._searchInput.style.visibility != \"hidden\") {\r\n        this._searchInput.focus();\r\n      }\r\n    });\r\n\r\n    // add initial values\r\n    // we use selectedOptions because single select can have a selected option\r\n    // without a selected attribute if it's the first value\r\n    let initialValues = this._selectElement.selectedOptions ?? [];\r\n    for (let j = 0; j < initialValues.length; j++) {\r\n      let initialValue = initialValues[j];\r\n      if (!initialValue.value) {\r\n        continue;\r\n      }\r\n      // track initial values for reset\r\n      this._initialValues.push(initialValue);\r\n      this.addItem(initialValue.textContent, initialValue.value);\r\n    }\r\n  }\r\n\r\n  _configureSearchInput() {\r\n    this._searchInput = document.createElement(\"input\");\r\n    this._searchInput.type = \"text\";\r\n    this._searchInput.autocomplete = \"off\";\r\n    this._searchInput.spellcheck = false;\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete\r\n    this._searchInput.ariaAutoComplete = \"list\";\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded\r\n    // use the aria-expanded state on the element with role combobox to communicate that the list is displayed.\r\n    this._searchInput.ariaExpanded = \"false\";\r\n    this._searchInput.ariaHasPopup = \"menu\";\r\n    this._searchInput.setAttribute(\"role\", \"combobox\");\r\n    this._searchInput.ariaLabel = this._config.searchLabel;\r\n    this._searchInput.style.backgroundColor = \"transparent\";\r\n    this._searchInput.style.color = \"currentColor\";\r\n    this._searchInput.style.border = \"0\";\r\n    this._searchInput.style.outline = \"0\";\r\n    this._searchInput.style.maxWidth = \"100%\";\r\n    this.resetSearchInput(true);\r\n\r\n    this._containerElement.appendChild(this._searchInput);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Events\r\n\r\n  onfocus(event) {\r\n    this._holderElement.classList.add(FOCUS_CLASS);\r\n    this._showOrSearch();\r\n  }\r\n\r\n  onblur(event) {\r\n    const sel = this.getSelection();\r\n    const data = {\r\n      selection: sel ? sel.dataset.value : null,\r\n      input: this._searchInput.value,\r\n    };\r\n    this._holderElement.classList.remove(FOCUS_CLASS);\r\n    this._hideSuggestions();\r\n    if (this._config.keepOpen) {\r\n      this.resetSearchInput();\r\n    }\r\n    if (this._config.addOnBlur) {\r\n      if (this._config.allowNew && this.canAdd(data.input)) {\r\n        this.addItem(data.input);\r\n        this.resetSearchInput();\r\n      }\r\n    }\r\n    if (this._fireEvents) {\r\n      this._selectElement.dispatchEvent(new CustomEvent(\"tags.blur\", { bubbles: true, detail: data }));\r\n    }\r\n  }\r\n\r\n  oninput(ev) {\r\n    const data = this._searchInput.value;\r\n\r\n    // Add item if a separator is used\r\n    // On mobile or copy paste, it can pass multiple chars (eg: when pressing space and it formats the string)\r\n    if (data) {\r\n      const lastChar = data.slice(-1);\r\n      if (this._config.separator.length && this._config.separator.includes(lastChar)) {\r\n        // Remove separator even if adding is prevented\r\n        this._searchInput.value = this._searchInput.value.slice(0, -1);\r\n        this._add(this._searchInput.value, null);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Adjust input width to current content\r\n    this._adjustWidth();\r\n\r\n    // Check if we should display suggestions\r\n    this._showOrSearch();\r\n  }\r\n\r\n  /**\r\n   * keypress doesn't send arrow keys, so we use keydown\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  onkeydown(event) {\r\n    // Keycode reference : https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\n    let key = event.keyCode || event.key;\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    // @ts-ignore\r\n    const target = event.target;\r\n\r\n    // Android virtual keyboard might always return 229\r\n    if (event.keyCode == 229) {\r\n      key = target.value.charAt(target.selectionStart - 1).charCodeAt(0);\r\n    }\r\n\r\n    // Keyboard keys\r\n    switch (key) {\r\n      case 13:\r\n      case \"Enter\":\r\n        event.preventDefault();\r\n        let selection = this.getSelection();\r\n        if (selection) {\r\n          selection.click();\r\n        } else {\r\n          // We use what is typed if not selected and not empty\r\n          if (this._config.allowNew && this._searchInput.value) {\r\n            let text = this._searchInput.value;\r\n            this._add(text, null);\r\n          }\r\n        }\r\n        break;\r\n      case 38:\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        this._moveSelection(PREV);\r\n        break;\r\n      case 40:\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        this._moveSelection(NEXT);\r\n        break;\r\n      case 8:\r\n      case \"Backspace\":\r\n        // If the current item is empty, remove the last one\r\n        if (this._searchInput.value.length == 0) {\r\n          this.removeLastItem();\r\n          this._adjustWidth();\r\n          this._showOrSearch();\r\n        }\r\n        break;\r\n      case 27:\r\n      case \"Escape\":\r\n        this._searchInput.focus();\r\n        this._hideSuggestions();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onmousemove(e) {\r\n    // Moving the mouse means no longer using keyboard\r\n    this._keyboardNavigation = false;\r\n  }\r\n\r\n  // #endregion\r\n\r\n  resetState() {\r\n    if (this.isDisabled()) {\r\n      this._holderElement.setAttribute(\"readonly\", \"\");\r\n      this._searchInput.setAttribute(\"disabled\", \"\");\r\n    } else {\r\n      if (this._holderElement.hasAttribute(\"readonly\")) {\r\n        this._holderElement.removeAttribute(\"readonly\");\r\n      }\r\n      if (this._searchInput.hasAttribute(\"disabled\")) {\r\n        this._searchInput.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n  }\r\n\r\n  resetSuggestions() {\r\n    let suggestions = Array.from(this._selectElement.querySelectorAll(\"option\"))\r\n      .filter((option) => {\r\n        return !option.disabled;\r\n      })\r\n      .map((option) => {\r\n        return {\r\n          value: option.getAttribute(\"value\"),\r\n          label: option.textContent,\r\n        };\r\n      });\r\n    this._buildSuggestions(suggestions);\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} show\r\n   */\r\n  _loadFromServer(show = false) {\r\n    if (this._abortController) {\r\n      this._abortController.abort();\r\n    }\r\n    this._abortController = new AbortController();\r\n\r\n    const params = Object.assign({}, this._config.serverParams);\r\n    // Pass current value\r\n    params[this._config.queryParam] = this._searchInput.value;\r\n    // Prevent caching\r\n    if (this._config.noCache) {\r\n      params.t = Date.now();\r\n    }\r\n    // We have a related field\r\n    if (params.related) {\r\n      /**\r\n       * @type {HTMLInputElement}\r\n       */\r\n      //@ts-ignore\r\n      const input = document.getElementById(params.related);\r\n      if (input) {\r\n        params.related = input.value;\r\n      }\r\n    }\r\n    const urlParams = new URLSearchParams(params).toString();\r\n\r\n    this._holderElement.classList.add(LOADING_CLASS);\r\n    fetch(this._config.server + \"?\" + urlParams, { signal: this._abortController.signal })\r\n      .then((r) => this._config.onServerResponse(r))\r\n      .then((suggestions) => {\r\n        let data = suggestions.data || suggestions;\r\n        this._buildSuggestions(data);\r\n        this._abortController = null;\r\n        if (show) {\r\n          this._showSuggestions();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.name === \"AbortError\") {\r\n          return;\r\n        }\r\n        console.error(e);\r\n      })\r\n      .finally((e) => {\r\n        this._holderElement.classList.remove(LOADING_CLASS);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   */\r\n  _add(text, value = null, data = {}) {\r\n    if (!this.canAdd(text, value)) {\r\n      return;\r\n    }\r\n    this.addItem(text, value, data);\r\n    if (this._config.keepOpen) {\r\n      this._showSuggestions();\r\n    } else {\r\n      this.resetSearchInput();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} dir\r\n   * @returns {HTMLElement}\r\n   */\r\n  _moveSelection(dir = NEXT) {\r\n    const active = this.getSelection();\r\n    /**\r\n     * @type {*|HTMLElement}\r\n     */\r\n    let sel = null;\r\n\r\n    // select first li if visible\r\n    if (!active) {\r\n      sel = this._dropElement.firstChild;\r\n      while (sel && sel.style.display === \"none\") {\r\n        sel = sel[\"nextSibling\"];\r\n      }\r\n    } else {\r\n      const sibling = dir === NEXT ? \"nextSibling\" : \"previousSibling\";\r\n\r\n      // Iterate over visible li\r\n      sel = active.parentNode;\r\n      do {\r\n        sel = sel[sibling];\r\n      } while (sel && sel.style.display === \"none\");\r\n\r\n      // We have a new selection\r\n      if (sel) {\r\n        // Change classes\r\n        active.classList.remove(...ACTIVE_CLASSES);\r\n\r\n        // Scroll if necessary\r\n        if (dir === PREV) {\r\n          // Don't use scrollIntoView as it scrolls the whole window\r\n          sel.parentNode.scrollTop = sel.offsetTop - sel.parentNode.offsetTop;\r\n        } else {\r\n          // This is the equivalent of scrollIntoView(false) but only for parent node\r\n          if (sel.offsetTop > sel.parentNode.offsetHeight - sel.offsetHeight) {\r\n            sel.parentNode.scrollTop += sel.offsetHeight;\r\n          }\r\n        }\r\n      } else if (active) {\r\n        sel = active.parentElement;\r\n      }\r\n    }\r\n\r\n    if (sel) {\r\n      const a = sel.querySelector(\"a\");\r\n      a.classList.add(...ACTIVE_CLASSES);\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", a.getAttribute(\"id\"));\r\n      if (this._config.updateOnSelect) {\r\n        this._searchInput.value = a.dataset.label;\r\n        this._adjustWidth();\r\n      }\r\n    } else {\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", \"\");\r\n    }\r\n    return sel;\r\n  }\r\n\r\n  /**\r\n   * Adjust the field to fit its content and show/hide placeholder if needed\r\n   */\r\n  _adjustWidth() {\r\n    if (this._searchInput.value) {\r\n      this._searchInput.size = this._searchInput.value.length;\r\n    } else {\r\n      // Show the placeholder only if empty\r\n      if (this.getSelectedValues().length) {\r\n        this._searchInput.placeholder = \"\";\r\n        this._searchInput.size = 1;\r\n      } else {\r\n        this._searchInput.size = this._config.placeholder.length > 0 ? this._config.placeholder.length : 1;\r\n        this._searchInput.placeholder = this._config.placeholder;\r\n      }\r\n    }\r\n\r\n    // If the string contains ascii chars or strange font, input size may be wrong\r\n    const v = this._searchInput.value || this._searchInput.placeholder;\r\n    const computedFontSize = window.getComputedStyle(this._holderElement).fontSize;\r\n    const w = calcTextWidth(v, computedFontSize);\r\n    this._searchInput.style.minWidth = w + \"px\";\r\n  }\r\n\r\n  /**\r\n   * Add suggestions to the drop element\r\n   * @param {array} suggestions\r\n   */\r\n  _buildSuggestions(suggestions) {\r\n    while (this._dropElement.lastChild) {\r\n      this._dropElement.removeChild(this._dropElement.lastChild);\r\n    }\r\n    for (let i = 0; i < suggestions.length; i++) {\r\n      const suggestion = suggestions[i];\r\n      if (!suggestion[this._config.valueField]) {\r\n        continue;\r\n      }\r\n\r\n      const value = suggestion[this._config.valueField];\r\n      const label = suggestion[this._config.labelField];\r\n\r\n      // initial selection\r\n      if (!this._config.liveServer) {\r\n        if (suggestion.selected || this._config.selected.includes(value)) {\r\n          // track for reset\r\n          this._initialValues.push({\r\n            value: value,\r\n            textContent: label,\r\n            dataset: suggestion.data,\r\n          });\r\n          this._add(label, value, suggestion.data);\r\n          continue; // no need to add as suggestion\r\n        }\r\n      }\r\n\r\n      const textContent = this._config.onRenderItem(suggestion, label);\r\n\r\n      const newChild = document.createElement(\"li\");\r\n      newChild.setAttribute(\"role\", \"presentation\");\r\n      const newChildLink = document.createElement(\"a\");\r\n      newChild.append(newChildLink);\r\n      newChildLink.setAttribute(\"id\", this._dropElement.getAttribute(\"id\") + \"-\" + i);\r\n      newChildLink.classList.add(...[\"dropdown-item\", \"text-truncate\"]);\r\n      newChildLink.setAttribute(VALUE_ATTRIBUTE, value);\r\n      newChildLink.setAttribute(\"data-label\", label);\r\n      newChildLink.setAttribute(\"href\", \"#\");\r\n      newChildLink.textContent = textContent;\r\n      this._dropElement.appendChild(newChild);\r\n\r\n      // Hover sets active item\r\n      newChildLink.addEventListener(\"mouseenter\", (event) => {\r\n        // Don't trigger enter if using arrows\r\n        if (this._keyboardNavigation) {\r\n          return;\r\n        }\r\n        this.removeSelection();\r\n        newChild.querySelector(\"a\").classList.add(...ACTIVE_CLASSES);\r\n      });\r\n      newChildLink.addEventListener(\"mousedown\", (event) => {\r\n        // Otherwise searchInput would lose focus and close the menu\r\n        event.preventDefault();\r\n      });\r\n      newChildLink.addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        this._add(textContent, value, suggestion.data);\r\n        this._config.onSelectItem(suggestion);\r\n      });\r\n    }\r\n\r\n    // Create the not found message\r\n    if (this._config.notFoundMessage) {\r\n      const notFound = document.createElement(\"li\");\r\n      notFound.setAttribute(\"role\", \"presentation\");\r\n      notFound.classList.add(CLASS_PREFIX + \"not-found\");\r\n      notFound.innerHTML = `<span class=\"dropdown-item\">${this._config.notFoundMessage}</span>`;\r\n      this._dropElement.appendChild(notFound);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.removeAll();\r\n\r\n    // Reset doesn't fire change event\r\n    this._fireEvents = false;\r\n    for (let j = 0; j < this._initialValues.length; j++) {\r\n      const iv = this._initialValues[j];\r\n      this.addItem(iv.textContent, iv.value, iv.dataset);\r\n    }\r\n    this._adjustWidth();\r\n    this._fireEvents = true;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} init Pass true during init\r\n   */\r\n  resetSearchInput(init = false) {\r\n    this._searchInput.value = \"\";\r\n    this._adjustWidth();\r\n\r\n    if (!init) {\r\n      this._hideSuggestions();\r\n      // Trigger input even to show suggestions if needed when focused\r\n      if (this._searchInput === document.activeElement) {\r\n        this._searchInput.dispatchEvent(new Event(\"input\"));\r\n      }\r\n    }\r\n\r\n    // We use visibility instead of display to keep layout intact\r\n    if (this._config.max && this.getSelectedValues().length >= this._config.max) {\r\n      this._searchInput.style.visibility = \"hidden\";\r\n    } else if (this._searchInput.style.visibility == \"hidden\") {\r\n      this._searchInput.style.visibility = \"visible\";\r\n    }\r\n\r\n    if (this.isSingle() && !init) {\r\n      //@ts-ignore\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {array}\r\n   */\r\n  getSelectedValues() {\r\n    // option[selected] is used rather that selectedOptions as it works more consistently\r\n    /**\r\n     * @type {NodeListOf<HTMLOptionElement>}\r\n     */\r\n    const selected = this._selectElement.querySelectorAll(\"option[selected]\");\r\n    return Array.from(selected).map((el) => el.value);\r\n  }\r\n\r\n  /**\r\n   * Do we have enough input to show suggestions ?\r\n   * @returns {Boolean}\r\n   */\r\n  _shouldShow() {\r\n    if (this.isDisabled()) {\r\n      return false;\r\n    }\r\n    return this._searchInput.value.length >= this._config.suggestionsThreshold;\r\n  }\r\n\r\n  /**\r\n   * Show suggestions or search them depending on live server\r\n   */\r\n  _showOrSearch() {\r\n    if (!this._shouldShow()) {\r\n      this._hideSuggestions();\r\n      return;\r\n    }\r\n    if (this._config.liveServer) {\r\n      this._searchFunc();\r\n    } else {\r\n      this._showSuggestions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   */\r\n  _showSuggestions() {\r\n    if (this._searchInput.style.visibility == \"hidden\") {\r\n      return;\r\n    }\r\n\r\n    const lookup = removeDiacritics(this._searchInput.value).toLowerCase();\r\n\r\n    // Get current values\r\n    const values = this.getSelectedValues();\r\n\r\n    // Filter the list according to search string\r\n    const list = this._dropElement.querySelectorAll(\"li\");\r\n    let count = 0;\r\n    let firstItem = null;\r\n    let hasPossibleValues = false;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let item = list[i];\r\n      let link = item.querySelector(\"a\");\r\n\r\n      // This is the empty result message\r\n      if (!link) {\r\n        item.style.display = \"none\";\r\n        continue;\r\n      }\r\n\r\n      // Remove previous selection\r\n      link.classList.remove(...ACTIVE_CLASSES);\r\n\r\n      // Hide selected values\r\n      if (values.indexOf(link.getAttribute(VALUE_ATTRIBUTE)) != -1) {\r\n        item.style.display = \"none\";\r\n        continue;\r\n      }\r\n\r\n      hasPossibleValues = true;\r\n\r\n      // Check search length since we can trigger dropdown with arrow\r\n      const text = removeDiacritics(item.textContent).toLowerCase();\r\n      const isMatched = lookup.length > 0 ? text.indexOf(lookup) >= 0 : true;\r\n      if (this._config.showAllSuggestions || isMatched) {\r\n        count++;\r\n        item.style.display = \"list-item\";\r\n        if (!firstItem && isMatched) {\r\n          firstItem = item;\r\n        }\r\n        if (this._config.maximumItems > 0 && count > this._config.maximumItems) {\r\n          item.style.display = \"none\";\r\n        }\r\n      } else {\r\n        item.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    if (firstItem || this._config.showAllSuggestions) {\r\n      this._holderElement.classList.remove(\"is-invalid\");\r\n\r\n      if (firstItem && this._config.autoselectFirst) {\r\n        this._moveSelection(NEXT);\r\n      }\r\n    } else {\r\n      // No item and we don't allow new items => error\r\n      if (!this._config.allowNew && !(lookup.length === 0 && !hasPossibleValues)) {\r\n        this._holderElement.classList.add(\"is-invalid\");\r\n      } else if (this._config.regex && this.isInvalid()) {\r\n        this._holderElement.classList.remove(\"is-invalid\");\r\n      }\r\n    }\r\n\r\n    // Remove dropdown if not found or to show validation message\r\n    if (count === 0 || this.isInvalid()) {\r\n      if (this._config.notFoundMessage) {\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        const notFound = this._dropElement.querySelector(\".\" + CLASS_PREFIX + \"not-found\");\r\n        notFound.style.display = \"block\";\r\n      } else {\r\n        // Remove dropdown if not found\r\n        this._hideSuggestions();\r\n      }\r\n    } else {\r\n      // Or show it if necessary\r\n      this._dropElement.classList.add(\"show\");\r\n      this._searchInput.ariaExpanded = \"true\";\r\n      this._positionMenu();\r\n    }\r\n  }\r\n\r\n  _positionMenu() {\r\n    if (this._config.fullWidth) {\r\n      // Use full input width\r\n      this._dropElement.style.left = -1 + \"px\";\r\n      this._dropElement.style.width = this._holderElement.offsetWidth + \"px\";\r\n    } else {\r\n      // Position next to search input\r\n      let left = this._searchInput.offsetLeft;\r\n\r\n      // Overflow right\r\n      const w = document.body.offsetWidth - 1; // avoid rounding issues\r\n      const scrollbarOffset = 30; // scrollbars are not taken into account\r\n      const wdiff = w - (left + this._dropElement.offsetWidth) - scrollbarOffset;\r\n\r\n      // If the dropdowns goes out of the viewport, remove the diff from the left position\r\n      if (wdiff < 0) {\r\n        left = left + wdiff;\r\n      }\r\n      this._dropElement.style.left = left + \"px\";\r\n\r\n      // Overflow bottom\r\n      const h = document.body.offsetHeight;\r\n      let bottom = this._searchInput.getBoundingClientRect().y + window.pageYOffset + this._dropElement.offsetHeight;\r\n      const hdiff = h - bottom;\r\n      if (hdiff < 0) {\r\n        // We display above input\r\n        this._dropElement.style.transform = \"translateY(calc(-100% - \" + scrollbarOffset + \"px))\";\r\n      } else {\r\n        this._dropElement.style.transform = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   */\r\n  _hideSuggestions() {\r\n    this._dropElement.classList.remove(\"show\");\r\n    this._holderElement.classList.remove(\"is-invalid\");\r\n    this._searchInput.ariaExpanded = \"false\";\r\n    this.removeSelection();\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   */\r\n  _getBootstrapVersion() {\r\n    let ver = 5;\r\n    // If we have jQuery and the tooltip plugin for BS4\r\n    //@ts-ignore\r\n    if (window.jQuery && $.fn.tooltip != undefined && $.fn.tooltip.Constructor != undefined) {\r\n      //@ts-ignore\r\n      ver = parseInt($.fn.tooltip.Constructor.VERSION.charAt(0));\r\n    }\r\n    return ver;\r\n  }\r\n\r\n  /**\r\n   * Find if label is already selected (based on attribute)\r\n   * @param {string} text\r\n   * @returns {boolean}\r\n   */\r\n  _isSelected(text) {\r\n    const opt = Array.from(this._selectElement.querySelectorAll(\"option\")).find((el) => el.textContent == text);\r\n    if (opt && opt.getAttribute(\"selected\")) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _fetchData() {\r\n    if (this._config.server && !this._config.liveServer) {\r\n      this._loadFromServer();\r\n    } else {\r\n      this.resetSuggestions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if value matches a configured regex\r\n   * @param {string} value\r\n   * @returns {boolean}\r\n   */\r\n  _validateRegex(value) {\r\n    const regex = new RegExp(this._config.regex.trim());\r\n    return regex.test(value);\r\n  }\r\n\r\n  /**\r\n   * @returns {HTMLElement}\r\n   */\r\n  getSelection() {\r\n    return this._dropElement.querySelector(\"a.\" + ACTIVE_CLASS);\r\n  }\r\n\r\n  removeSelection() {\r\n    const selection = this.getSelection();\r\n    if (selection) {\r\n      selection.classList.remove(...ACTIVE_CLASSES);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   * @returns {HTMLElement}\r\n   */\r\n  getActiveSelection() {\r\n    return this.getSelection();\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   */\r\n  removeActiveSelection() {\r\n    return this.removeSelection();\r\n  }\r\n\r\n  removeAll() {\r\n    let items = this.getSelectedValues();\r\n    items.forEach((item) => {\r\n      this.removeItem(item, true);\r\n    });\r\n    this._adjustWidth();\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} noEvents\r\n   */\r\n  removeLastItem(noEvents = false) {\r\n    let items = this._containerElement.querySelectorAll(\"span\");\r\n    if (!items.length) {\r\n      return;\r\n    }\r\n    let lastItem = items[items.length - 1];\r\n    this.removeItem(lastItem.getAttribute(VALUE_ATTRIBUTE), noEvents);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  isDisabled() {\r\n    return this._selectElement.hasAttribute(\"disabled\") || this._selectElement.disabled || this._selectElement.hasAttribute(\"readonly\");\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  isInvalid() {\r\n    return this._holderElement.classList.contains(\"is-invalid\");\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  isSingle() {\r\n    return !this._selectElement.hasAttribute(\"multiple\");\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @returns {boolean}\r\n   */\r\n  canAdd(text, value = null) {\r\n    if (!value) {\r\n      value = text;\r\n    }\r\n    // Check invalid input\r\n    if (!text) {\r\n      return false;\r\n    }\r\n    // Check disabled\r\n    if (this.isDisabled()) {\r\n      return false;\r\n    }\r\n    // Check already selected input (single will replace)\r\n    if (!this.isSingle() && this._isSelected(text)) {\r\n      return false;\r\n    }\r\n    // Check for max\r\n    if (this._config.max && this.getSelectedValues().length >= this._config.max) {\r\n      return false;\r\n    }\r\n    // Check for regex\r\n    if (this._config.regex && !this._validateRegex(text)) {\r\n      this._holderElement.classList.add(\"is-invalid\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * You might want to use canAdd before to ensure the item is valid\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   */\r\n  addItem(text, value = null, data = {}) {\r\n    if (!value) {\r\n      value = text;\r\n    }\r\n\r\n    // Single items remove first\r\n    if (this.isSingle() && this.getSelectedValues().length) {\r\n      this.removeLastItem(true);\r\n    }\r\n\r\n    const bver = this._getBootstrapVersion();\r\n    /**\r\n     * @type {HTMLOptionElement}\r\n     */\r\n    let opt = this._selectElement.querySelector('option[value=\"' + value + '\"]');\r\n    if (opt) {\r\n      data = opt.dataset;\r\n    }\r\n\r\n    // create span\r\n    let html = text;\r\n    let span = document.createElement(\"span\");\r\n    let classes = [\"badge\"];\r\n    let badgeStyle = this._config.badgeStyle;\r\n    if (data.badgeStyle) {\r\n      badgeStyle = data.badgeStyle;\r\n    }\r\n    if (data.badgeClass) {\r\n      classes.push(...data.badgeClass.split(\" \"));\r\n    }\r\n    if (this._config.baseClass) {\r\n      // custom style\r\n      bver === 5 ? classes.push(\"me-2\") : classes.push(\"mr-2\");\r\n      classes.push(...this._config.baseClass.split(\" \"));\r\n    } else if (bver === 5) {\r\n      //https://getbootstrap.com/docs/5.1/components/badge/\r\n      classes = [...classes, ...[\"me-2\", \"bg-\" + badgeStyle, \"mw-100\"]];\r\n    } else {\r\n      // https://getbootstrap.com/docs/4.6/components/badge/\r\n      classes = [...classes, ...[\"mr-2\", \"badge-\" + badgeStyle]];\r\n    }\r\n    span.classList.add(...classes);\r\n    span.setAttribute(VALUE_ATTRIBUTE, value);\r\n\r\n    if (this._config.allowClear) {\r\n      const closeClass = classes.includes(\"text-dark\") ? \"btn-close\" : \"btn-close-white\";\r\n      let btnMargin;\r\n      let btnFloat;\r\n      if (this._config.clearEnd) {\r\n        btnMargin = bver === 5 ? \"ms-2\" : \"ml-2\";\r\n        btnFloat = bver === 5 ? \"float-end\" : \"float:right;\";\r\n      } else {\r\n        btnMargin = bver === 5 ? \"me-2\" : \"mr-2\";\r\n        btnFloat = bver === 5 ? \"float-start\" : \"float:left;\";\r\n      }\r\n      const btn =\r\n        bver === 5\r\n          ? '<button type=\"button\" style=\"font-size:0.65em\" class=\"' +\r\n            btnMargin +\r\n            \" \" +\r\n            btnFloat +\r\n            \" btn-close \" +\r\n            closeClass +\r\n            '\" aria-label=\"' +\r\n            this._config.clearLabel +\r\n            '\"></button>'\r\n          : '<button type=\"button\" style=\"font-size:1em;' +\r\n            btnFloat +\r\n            'text-shadow:none;color:currentColor;transform:scale(1.2)\" class=\"' +\r\n            btnMargin +\r\n            ' close\" aria-label=\"' +\r\n            this._config.clearLabel +\r\n            '\"><span aria-hidden=\"true\">&times;</span></button>';\r\n      html = btn + html;\r\n    }\r\n\r\n    span.innerHTML = html;\r\n    this._containerElement.insertBefore(span, this._searchInput);\r\n\r\n    if (this._config.allowClear) {\r\n      span.querySelector(\"button\").addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.isDisabled()) {\r\n          this.removeItem(value);\r\n          //@ts-ignore\r\n          document.activeElement.blur();\r\n          this._adjustWidth();\r\n        }\r\n      });\r\n    }\r\n\r\n    // we need to create a new option\r\n    if (!opt) {\r\n      opt = document.createElement(\"option\");\r\n      opt.value = value;\r\n      opt.textContent = text; // innerText is not well supported by jsdom\r\n      // Pass along data provided\r\n      for (const [key, value] of Object.entries(data)) {\r\n        opt.dataset[key] = value;\r\n      }\r\n      this._selectElement.appendChild(opt);\r\n    }\r\n\r\n    // update select, we need to set attribute for option[selected]\r\n    opt.setAttribute(\"selected\", \"selected\");\r\n    opt.selected = true;\r\n\r\n    // Fire change event\r\n    if (this._fireEvents) {\r\n      this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @param {boolean} value\r\n   */\r\n  removeItem(value, noEvents = false) {\r\n    let item = this._containerElement.querySelector(\"span[\" + VALUE_ATTRIBUTE + '=\"' + value + '\"]');\r\n    if (!item) {\r\n      return;\r\n    }\r\n    item.remove();\r\n\r\n    // update select\r\n    /**\r\n     * @type {HTMLOptionElement}\r\n     */\r\n    let opt = this._selectElement.querySelector('option[value=\"' + value + '\"]');\r\n    if (opt) {\r\n      opt.removeAttribute(\"selected\");\r\n      opt.selected = false;\r\n\r\n      // Fire change event\r\n      if (this._fireEvents && !noEvents) {\r\n        this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n      }\r\n    }\r\n\r\n    // Make input visible\r\n    if (this._searchInput.style.visibility == \"hidden\" && this._config.max && this.getSelectedValues().length < this._config.max) {\r\n      this._searchInput.style.visibility = \"visible\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n"],
  "mappings": "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",
  "names": []
}
